/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.mydsl.profissional.Model

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class ProfissionalGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		fsa.generateFile('profissional.xml', toXML(resource.contents.head as Model))
	}
	
	def toXML(Model sm) '''
	«FOR c : sm.profissional»
	<Nome>«c.name»</Nome>
	«FOR em : c.empresa»
	<Empresa>«em.name»</Empresa>
	«FOR prog : em.linguagens»
	<Linguagem>«prog.name»</Linguagem>
	«ENDFOR»
	«ENDFOR»
	«ENDFOR»
	'''
	
}

	

